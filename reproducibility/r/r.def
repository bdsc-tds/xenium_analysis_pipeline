BootStrap: docker
From: condaforge/mambaforge:24.7.1-2
Stage: conda

BootStrap: docker
From: mambaorg/micromamba:noble
Stage: mamba

%files from conda
    /opt/conda /pkgs/conda

%post
    cd /opt

# Put conda binaries to the right directory.
    rm -rf conda
    mv /pkgs/conda .
    rm -rf /pkgs

    cd /

BootStrap: docker
From: rocker/r-base:4.4.1
Stage: main

%setup
    mkdir -p ${SINGULARITY_ROOTFS}/opt/_renv/renv

%files from mamba
    /opt/conda /opt
    /usr/local/bin/_*.sh /usr/local/bin
    /bin/micromamba /bin

%files
    metadata/renv.lock /opt/_renv
    metadata/.Rprofile /opt/_renv
    metadata/renv/activate.R /opt/_renv/renv
    metadata/renv/settings.json /opt/_renv/renv

%environment
    export PATH=/opt/conda/bin:/opt/conda/condabin:$PATH
    export MAMBA_ROOT_PREFIX=/opt/conda
    export DEBIAN_FRONTEND=noninteractive
    export TZ="Europe/Zurich"

%post
# DNS
    # echo "nameserver 8.8.8.8" >> /etc/resolv.conf
    sed -i 's/ch.archive.ubuntu.com/en.archive.ubuntu.com/g' /etc/apt/sources.list.d/debian.sources

# Force ipv4
    echo 'Acquire::ForceIPv4 "true";' | tee /etc/apt/apt.conf.d/99force-ipv4

# Set locale 
    apt-get update
    apt-get install -y locales gnupg-agent
    sed -i '/^#.* en_.*.UTF-8 /s/^#//' /etc/locale.gen
    locale-gen

# Install essential packages
    apt-get install -y --no-install-recommends software-properties-common dirmngr ca-certificates lsb-release

# Configure tzdata to prevent asking for input
    export PATH=/opt/conda/bin:/opt/conda/condabin:$PATH
    export MAMBA_ROOT_PREFIX=/opt/conda
    export DEBIAN_FRONTEND=noninteractive
    export TZ="Europe/Zurich"
    export LIBARROW_MINIMAL="false"

# Install system packages
    apt-get install -y git vim cmake wget pandoc libssl-dev libcurl4-openssl-dev libmagick++-dev bzip2 libgsl-dev

# Install apache arrow
    wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
    apt-get install -y ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
    apt-get update
    apt-get install -y libarrow-dev libarrow-glib-dev libarrow-dataset-dev libarrow-dataset-glib-dev libarrow-acero-dev libarrow-flight-dev libarrow-flight-glib-dev libarrow-flight-sql-dev libarrow-flight-sql-glib-dev libgandiva-dev libgandiva-glib-dev libparquet-dev libparquet-glib-dev
    apt-get clean

# Install "renv" for R
    R -e "install.packages('renv', repos = c(CRAN = 'https://cloud.r-project.org'))"

# Install R packages with specific versions recorded by "renv"
    R -e "renv::restore(lockfile = '/opt/_renv/renv.lock')"
